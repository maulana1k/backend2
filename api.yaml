swagger: "2.0"
info:
  version: "1.0.0"
  title: Login and Registration API
basePath: /api/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
definitions:
  FormModel:
    type: object
    properties:
      components:
        type: array
        items:
          $ref: "#/definitions/FormComponent"
  FormComponent:
    type: object
    properties:
      type:
        type: string
      key:
        type: string
      label:
        type: string
      placeholder:
        type: string
      input:
        type: boolean
      validate:
        type: object
      data:
        type: object
      datePicker:
        type: object
  FormResponse:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      form:
        type: object
paths:
  /login:
    post:
      summary: Logs in a user
      parameters:
        - name: email
          in: formData
          description: User email address
          required: true
          type: string
        - name: password
          in: formData
          description: User password
          required: true
          type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /register:
    post:
      summary: Registers a new user
      parameters:
        - name: name
          in: formData
          description: User name
          required: true
          type: string
        - name: email
          in: formData
          description: User email address
          required: true
          type: string
        - name: password
          in: formData
          description: User password
          required: true
          type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "500":
          description: Internal server error
  /forms:
    get:
      summary: Get all FormIO forms
      tags:
        - forms
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/FormResponse"
        500:
          description: Internal server error
    post:
      summary: Create a new FormIO form
      tags:
        - forms
      parameters:
        - in: body
          name: form
          description: The JSON model of the new form
          schema:
            $ref: "#/definitions/FormModel"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/FormResponse"
        400:
          description: Invalid input
        500:
          description: Internal server error
  /forms/{formId}:
    get:
      summary: Get a FormIO form by ID
      tags:
        - forms
      parameters:
        - name: formId
          in: path
          description: ID of the form to retrieve
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/FormResponse"
        400:
          description: Invalid input
        404:
          description: Form not found
        500:
          description: Internal server error
    put:
      summary: Update a FormIO form by ID
      tags:
        - forms
      parameters:
        - name: formId
          in: path
          description: ID of the form to update
          required: true
          type: string
        - in: body
          name: form
          description: The updated JSON model of the form
          schema:
            $ref: "#/definitions/FormModel"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/FormResponse"
        400:
          description: Invalid input
        404:
          description: Form not found
        500:
          description: Internal server error
    delete:
      summary: Delete a FormIO form by ID
      tags:
        - forms
      parameters:
        - name: formId
          in: path
          description: ID of the form to delete
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/FormResponse"
        404:
          description: Form not found
        500:
          description: Internal server error
